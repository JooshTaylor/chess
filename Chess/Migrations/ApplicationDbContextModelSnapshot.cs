// <auto-generated />
using System;
using Chess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Chess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.8");

            modelBuilder.Entity("Chess.Models.Entities.Game", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Ending")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("PlayerOneId")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("PlayerTwoId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("TimeControlIncrement")
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("TimeControlTime")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Winner")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("TimeControlTime", "TimeControlIncrement");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("Chess.Models.Entities.GamePiece", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<ulong?>("GameId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PieceInitialX")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PieceInitialY")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("PromotionType")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TotalMoves")
                        .HasColumnType("INTEGER");

                    b.Property<int>("X")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Y")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.HasIndex("PieceInitialX", "PieceInitialY");

                    b.ToTable("GamePieces");
                });

            modelBuilder.Entity("Chess.Models.Entities.Move", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("GameId")
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("PieceId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("X")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Y")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.HasIndex("PieceId");

                    b.ToTable("Moves");
                });

            modelBuilder.Entity("Chess.Models.Entities.Piece", b =>
                {
                    b.Property<int>("InitialX")
                        .HasColumnType("INTEGER");

                    b.Property<int>("InitialY")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Colour")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("InitialX", "InitialY");

                    b.ToTable("Pieces");

                    b.HasData(
                        new
                        {
                            InitialX = 1,
                            InitialY = 1,
                            Colour = 1,
                            Type = 2
                        },
                        new
                        {
                            InitialX = 2,
                            InitialY = 1,
                            Colour = 1,
                            Type = 4
                        },
                        new
                        {
                            InitialX = 3,
                            InitialY = 1,
                            Colour = 1,
                            Type = 3
                        },
                        new
                        {
                            InitialX = 4,
                            InitialY = 1,
                            Colour = 1,
                            Type = 1
                        },
                        new
                        {
                            InitialX = 5,
                            InitialY = 1,
                            Colour = 1,
                            Type = 0
                        },
                        new
                        {
                            InitialX = 6,
                            InitialY = 1,
                            Colour = 1,
                            Type = 3
                        },
                        new
                        {
                            InitialX = 7,
                            InitialY = 1,
                            Colour = 1,
                            Type = 4
                        },
                        new
                        {
                            InitialX = 8,
                            InitialY = 1,
                            Colour = 1,
                            Type = 2
                        },
                        new
                        {
                            InitialX = 1,
                            InitialY = 2,
                            Colour = 1,
                            Type = 5
                        },
                        new
                        {
                            InitialX = 2,
                            InitialY = 2,
                            Colour = 1,
                            Type = 5
                        },
                        new
                        {
                            InitialX = 3,
                            InitialY = 2,
                            Colour = 1,
                            Type = 5
                        },
                        new
                        {
                            InitialX = 4,
                            InitialY = 2,
                            Colour = 1,
                            Type = 5
                        },
                        new
                        {
                            InitialX = 5,
                            InitialY = 2,
                            Colour = 1,
                            Type = 5
                        },
                        new
                        {
                            InitialX = 6,
                            InitialY = 2,
                            Colour = 1,
                            Type = 5
                        },
                        new
                        {
                            InitialX = 7,
                            InitialY = 2,
                            Colour = 1,
                            Type = 5
                        },
                        new
                        {
                            InitialX = 8,
                            InitialY = 2,
                            Colour = 1,
                            Type = 5
                        },
                        new
                        {
                            InitialX = 1,
                            InitialY = 7,
                            Colour = 0,
                            Type = 5
                        },
                        new
                        {
                            InitialX = 2,
                            InitialY = 7,
                            Colour = 0,
                            Type = 5
                        },
                        new
                        {
                            InitialX = 3,
                            InitialY = 7,
                            Colour = 0,
                            Type = 5
                        },
                        new
                        {
                            InitialX = 4,
                            InitialY = 7,
                            Colour = 0,
                            Type = 5
                        },
                        new
                        {
                            InitialX = 5,
                            InitialY = 7,
                            Colour = 0,
                            Type = 5
                        },
                        new
                        {
                            InitialX = 6,
                            InitialY = 7,
                            Colour = 0,
                            Type = 5
                        },
                        new
                        {
                            InitialX = 7,
                            InitialY = 7,
                            Colour = 0,
                            Type = 5
                        },
                        new
                        {
                            InitialX = 8,
                            InitialY = 7,
                            Colour = 0,
                            Type = 5
                        },
                        new
                        {
                            InitialX = 1,
                            InitialY = 8,
                            Colour = 0,
                            Type = 2
                        },
                        new
                        {
                            InitialX = 2,
                            InitialY = 8,
                            Colour = 0,
                            Type = 4
                        },
                        new
                        {
                            InitialX = 3,
                            InitialY = 8,
                            Colour = 0,
                            Type = 3
                        },
                        new
                        {
                            InitialX = 4,
                            InitialY = 8,
                            Colour = 0,
                            Type = 1
                        },
                        new
                        {
                            InitialX = 5,
                            InitialY = 8,
                            Colour = 0,
                            Type = 0
                        },
                        new
                        {
                            InitialX = 6,
                            InitialY = 8,
                            Colour = 0,
                            Type = 3
                        },
                        new
                        {
                            InitialX = 7,
                            InitialY = 8,
                            Colour = 0,
                            Type = 4
                        },
                        new
                        {
                            InitialX = 8,
                            InitialY = 8,
                            Colour = 0,
                            Type = 2
                        });
                });

            modelBuilder.Entity("Chess.Models.Entities.TimeControl", b =>
                {
                    b.Property<ulong>("Time")
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("Increment")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("Time", "Increment");

                    b.ToTable("TimeControls");

                    b.HasData(
                        new
                        {
                            Time = 100000ul,
                            Increment = 0ul,
                            Type = 0
                        },
                        new
                        {
                            Time = 100000ul,
                            Increment = 1000ul,
                            Type = 0
                        },
                        new
                        {
                            Time = 200000ul,
                            Increment = 1000ul,
                            Type = 0
                        },
                        new
                        {
                            Time = 180000ul,
                            Increment = 0ul,
                            Type = 1
                        },
                        new
                        {
                            Time = 180000ul,
                            Increment = 2000ul,
                            Type = 1
                        },
                        new
                        {
                            Time = 300000ul,
                            Increment = 0ul,
                            Type = 1
                        },
                        new
                        {
                            Time = 600000ul,
                            Increment = 0ul,
                            Type = 2
                        },
                        new
                        {
                            Time = 900000ul,
                            Increment = 10000ul,
                            Type = 2
                        },
                        new
                        {
                            Time = 1800000ul,
                            Increment = 0ul,
                            Type = 2
                        });
                });

            modelBuilder.Entity("Chess.Models.Entities.Game", b =>
                {
                    b.HasOne("Chess.Models.Entities.TimeControl", "TimeControl")
                        .WithMany()
                        .HasForeignKey("TimeControlTime", "TimeControlIncrement")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TimeControl");
                });

            modelBuilder.Entity("Chess.Models.Entities.GamePiece", b =>
                {
                    b.HasOne("Chess.Models.Entities.Game", null)
                        .WithMany("Pieces")
                        .HasForeignKey("GameId");

                    b.HasOne("Chess.Models.Entities.Piece", "Piece")
                        .WithMany()
                        .HasForeignKey("PieceInitialX", "PieceInitialY")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Piece");
                });

            modelBuilder.Entity("Chess.Models.Entities.Move", b =>
                {
                    b.HasOne("Chess.Models.Entities.Game", "Game")
                        .WithMany("Moves")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Chess.Models.Entities.GamePiece", "Piece")
                        .WithMany()
                        .HasForeignKey("PieceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("Piece");
                });

            modelBuilder.Entity("Chess.Models.Entities.Game", b =>
                {
                    b.Navigation("Moves");

                    b.Navigation("Pieces");
                });
#pragma warning restore 612, 618
        }
    }
}
